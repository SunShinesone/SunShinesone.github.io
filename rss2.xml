<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>鹿蝶</title>
    <link>http://example.com/</link>
    
    <atom:link href="http://example.com/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>路漫漫其修远兮,吾将上下而求索</description>
    <pubDate>Wed, 20 Sep 2023 06:48:22 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>vue2和vue3的区别</title>
      <link>http://example.com/2023/09/20/vue2%E5%92%8Cvue3%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
      <guid>http://example.com/2023/09/20/vue2%E5%92%8Cvue3%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
      <pubDate>Wed, 20 Sep 2023 06:01:20 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;strong&gt;vue2传值&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.父传子  —props&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;① 在父组件的子组件标签上面绑定自定义属性  属性值就是要传递的数据&lt;/p&gt;
&lt;p&gt;② 子组件用props接收   props可以是数组</description>
        
      
      
      
      <content:encoded><![CDATA[<p><strong>vue2传值</strong></p><p><strong>1.父传子  —props</strong></p><p>① 在父组件的子组件标签上面绑定自定义属性  属性值就是要传递的数据</p><p>② 子组件用props接收   props可以是数组也可以是对象，接受的数据可以直接使用数组写法 props: [“属性名”] 或者对象写法 props:{属性名:数据类型}</p><p><strong>2.子传父   —$emit</strong></p><p>① 在子组件的标签上定义一个单击事件，在这个单击事件中，将数据通过this.$emit(‘自定义属性名’，‘传递的值’)发送出去</p><p>②  父组件的子组件标签里监听自定义事件，事件处理程序的形参就是接收的子组件传过来的数据</p><p><strong>3.非父子之间的传值  —发布订阅</strong></p><p>需要创建一个事件总线  src&#x2F;utils&#x2F;bus.js</p><p>①在传输数据的一方引入Bus.js 然后通过bus.$emit( “自定义事件名” , “ 要传递的参数 “ ) 来派发事件，数据是以emit()的参数形式来传递 </p><p>② 在接受的数据的一方 引入 bus.js 然后通过 bus.$on(“自定义事件名”,(data)&#x3D;&gt;{data是接受的数据})</p><p>1.父传子  —props</p><p>① 在父组件的子组件标签上面绑定自定义属性  属性值就是要传递的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;HelloWorld :msg=&quot;msg&quot; &gt;&lt;/HelloWorld&gt;</span><br></pre></td></tr></table></figure><p>② 子组件用props接收   props可以是数组也可以是对象，接受的数据可以直接使用数组写法 props: [“属性名”] 或者对象写法 props:{属性名:数据类型}</p><p>props: {msg: String},</p><p>2.子传父   —$emit</p><p>① 在子组件的标签上定义一个单击事件，在这个单击事件中，将数据通过this.$emit(‘自定义属性名’，‘传递的值’)发送出去</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;button @click=&quot;gofa&quot;&gt;我是向父元素传的值&lt;/button&gt;</span><br><span class="line">………………</span><br><span class="line">gofa() &#123; </span><br><span class="line">let uname = &#x27;hahahahah&#x27;;          </span><br><span class="line">this.$emit(&#x27;sendname&#x27;, uname)      </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>②  父组件的子组件标签里监听自定义事件，事件处理程序的形参就是接收的子组件传过来的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;SonView :list=&quot;list&quot; @sendname=&quot;getson&quot;&gt;&lt;/SonView&gt; </span><br><span class="line">……………… </span><br><span class="line">getson(val) &#123;     </span><br><span class="line">console.log(val,&#x27;这是子传父的值&#x27;);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.非父子之间的传值  —发布订阅</p><p>需要创建一个事件总线  src&#x2F;utils&#x2F;bus.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &quot;vue&quot;; </span><br><span class="line">export default new Vue()</span><br></pre></td></tr></table></figure><p>①在传输数据的一方引入Bus.js 然后通过bus.$emit( “自定义事件名” , “ 要传递的参数 “ ) 来派发事件，数据是以emit()的参数形式来传递 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import bus from &#x27;@/utils/bus.js&#x27; </span><br><span class="line">……………… </span><br><span class="line">goborther() &#123;    </span><br><span class="line">let mmg=&#x27;my borther&#x27;  </span><br><span class="line">bus.$emit(&#x27;sendborther&#x27;,mmg)    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>② 在接受的数据的一方 引入 bus.js 然后通过 bus.$on(“自定义事件名”,(data)&#x3D;&gt;{data是接受的数据})</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import bus from &#x27;@/utils/bus.js&#x27;</span><br><span class="line">……………… </span><br><span class="line">mounted() &#123;    </span><br><span class="line">bus.$on(&#x27;sendborther&#x27;, (data) =&gt; &#123;  </span><br><span class="line">console.log(data);    </span><br><span class="line">&#125;)  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>案例：</strong></p><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;   </span><br><span class="line">&lt;div class=&quot;hello&quot;&gt;  </span><br><span class="line">&lt;h1&gt;我是子组件sonview&lt;/h1&gt;   </span><br><span class="line">&lt;ul&gt;            </span><br><span class="line">&lt;li v-for=&quot;(item, index) in list&quot; :key=&quot;index&quot;&gt;&#123;&#123; item &#125;&#125;&lt;/li&gt;  </span><br><span class="line">&lt;/ul&gt;   </span><br><span class="line">&lt;button @click=&quot;gofa&quot;&gt;我是向父元素传的值&#123;&#123; name &#125;&#125;&lt;/button&gt;  </span><br><span class="line">&lt;/div&gt; </span><br><span class="line">&lt;/template&gt;  </span><br><span class="line">&lt;script&gt; </span><br><span class="line">import bus from &#x27;@/utils/bus.js&#x27;</span><br><span class="line">export default &#123;  </span><br><span class="line">name: &#x27;SonView&#x27;,    </span><br><span class="line">data() &#123;       </span><br><span class="line">return &#123;   </span><br><span class="line">name:&#x27;admin&#x27;    </span><br><span class="line">&#125;    </span><br><span class="line">&#125;,  </span><br><span class="line">methods: &#123;      </span><br><span class="line">gofa() &#123;     </span><br><span class="line">let uname = &#x27;hahahahah&#x27;;    </span><br><span class="line">this.$emit(&#x27;sendname&#x27;, uname)    </span><br><span class="line">&#125;   </span><br><span class="line">&#125;,    </span><br><span class="line">props: &#123;     </span><br><span class="line">list: Array   </span><br><span class="line">&#125;,   </span><br><span class="line">mounted() &#123;  </span><br><span class="line">bus.$on(&#x27;sendborther&#x27;, (data) =&gt; &#123;    </span><br><span class="line">console.log(data);      </span><br><span class="line">&#125;) </span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">&lt;/script&gt; </span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>HelloWorld.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;  </span><br><span class="line">&lt;div class=&quot;hello&quot;&gt;  </span><br><span class="line">    &lt;h1&gt;我是子组件helloworld&lt;/h1&gt; </span><br><span class="line">    &#123;&#123; msg &#125;&#125;   </span><br><span class="line">    &lt;button @click=&quot;goborther&quot;&gt;我是传给兄弟的值&lt;/button&gt;  </span><br><span class="line">    &lt;/div&gt; </span><br><span class="line">&lt;/template&gt; </span><br><span class="line">&lt;script&gt; </span><br><span class="line">    import bus from &#x27;@/utils/bus.js&#x27; </span><br><span class="line">    export default &#123; </span><br><span class="line">        name: &#x27;HelloWorld&#x27;,</span><br><span class="line">        props: &#123;  </span><br><span class="line">            msg: String </span><br><span class="line">        &#125;, </span><br><span class="line">        methods: &#123;    </span><br><span class="line">            goborther() &#123;    </span><br><span class="line">                let mmg=&#x27;my borther&#x27;    </span><br><span class="line">                bus.$emit(&#x27;sendborther&#x27;,mmg)  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>SonView.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;     </span><br><span class="line">&lt;div class=&quot;hello&quot;&gt;   </span><br><span class="line">    &lt;h1&gt;我是子组件sonview&lt;/h1&gt;    </span><br><span class="line">    &lt;ul&gt;        </span><br><span class="line">        &lt;li v-for=&quot;(item, index) in list&quot; :key=&quot;index&quot;&gt;&#123;&#123; item &#125;&#125;&lt;/li&gt;       </span><br><span class="line">    &lt;/ul&gt;     </span><br><span class="line">    &lt;button @click=&quot;gofa&quot;&gt;我是向父元素传的值&#123;&#123; name &#125;&#125;&lt;/button&gt;   </span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt; </span><br><span class="line">&lt;script&gt; </span><br><span class="line">    import bus from &#x27;@/utils/bus.js&#x27; </span><br><span class="line">    export default &#123;  </span><br><span class="line">        name: &#x27;SonView&#x27;,   </span><br><span class="line">        data() &#123;        </span><br><span class="line">            return &#123;        </span><br><span class="line">                name:&#x27;admin&#x27;  </span><br><span class="line">            &#125;    </span><br><span class="line">        &#125;,    </span><br><span class="line">        methods: &#123;    </span><br><span class="line">            gofa() &#123;    </span><br><span class="line">                let uname = &#x27;hahahahah&#x27;;      </span><br><span class="line">                this.$emit(&#x27;sendname&#x27;, uname)    </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;,  </span><br><span class="line">        props: &#123;     </span><br><span class="line">            list: Array  </span><br><span class="line">        &#125;,  </span><br><span class="line">        mounted() &#123;   </span><br><span class="line">            bus.$on(&#x27;sendborther&#x27;, (data) =&gt; &#123;  </span><br><span class="line">                console.log(data);   </span><br><span class="line">            &#125;)  </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&lt;/script&gt; </span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;   </span><br></pre></td></tr></table></figure><p>bus.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &quot;vue&quot;; </span><br><span class="line">export default new Vue()</span><br></pre></td></tr></table></figure><p><strong>vue3传值</strong> </p><p> <strong>1、父传子</strong></p><p>​      1、在父组件的子组件标签里 绑定自定义属性  值就是要传递的数据</p><p>​      2、在子组件里defineProps接收数据并使用</p><p>​      案例需求：父组件的islogin传给HelloWorld子组件</p><p> <strong>2、子传父</strong></p><p>​      1、子组件通过defineEmits获取emit   事件发射器</p><p>​      2、通过emit发送自定义事件  emit(自定义事件名，要传的数据)</p><p>​      3、父组件的子组件标签里监听自定义事件，事件处理程序的形参就是接收的子组件传过来的数据</p><p><strong>3、ref属性</strong></p><p>​    ref获取dom节点</p><p>​    1、创建ref   let iptRef &#x3D; ref(null);</p><p>​    2、模板中建立关联    </p><p>​    3、通过iptRef.value 获取dom节点</p><p>​    ref可以获取组件实例  只能获取组件实例中用defineExpose暴露出来的数据和方法</p><p><strong>4、非父子组件通信  类似于vue2中的发布订阅</strong></p><p>​    vue3 使用的是  mitt插件</p><p>​    实现步骤 ：</p><ol><li>下载npm i mitt</li><li>创建src&#x2F;utils&#x2F;bus.js</li><li>订阅方（接收数据的组件） 订阅消息  bus.on()</li><li>发布方（传递数据的组件）  发布消息  bus.emit()   注意，先订阅  再发布</li></ol><p>1.父传子 </p><p>① 在父组件的子组件标签上绑定动态属性，属性值就是要传的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;HelloWorld :islogin=&quot;islogin&quot; :list=&quot;list&quot;/&gt;</span><br></pre></td></tr></table></figure><p>② 子组件中用defineProps接收数据并使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">const props = defineProps(&#123; </span><br><span class="line">islogin: Boolean, </span><br><span class="line">list: Array </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>2.子传父</p><p>① 子组件通过defineEmits获取emit     事件发射器</p><p><code>const emit = defineEmits([&#39;sendson&#39;])</code></p><p>② 自定义单击事件 通过emit发送自定义事件 emit(自定义事件名，要传递的值) 第一个单击事件和第二个不同，第一个单击事件是触发事件，emit(自定义事件名，要传递的值)在其中发生</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> &lt;button @click=&quot;sendid&quot;&gt;子元素传递给父元素的值&lt;/button&gt;  </span><br><span class="line">…………………… </span><br><span class="line">function sendid() &#123;  </span><br><span class="line">emit(&#x27;sendson&#x27;, sonvalue.value)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>③ 在父组件的子组件标签内监听自定义事件 @上个页面传过来的自定义事件名就是emit传的自定义事件名&#x3D;一个单击事件 事件处理程序的形参就是传递过来的值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;sonView @sendson=&quot;getson&quot;&gt;&lt;/sonView&gt;</span><br><span class="line">………… </span><br><span class="line">function getson(val)&#123; </span><br><span class="line">console.log(val); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.非父子之间传值</p><p>需要用到事件总线（中央总线）</p><p> 在vue3中需要用到mitt插件</p><p>实现步骤：</p><p>① 下载mitt </p><p> npm i mitt</p><p>② 创建 src&#x2F;utils&#x2F;bus.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import  mitt from &quot;mitt&quot; </span><br><span class="line">let bus = mitt() </span><br><span class="line">console.log(bus); </span><br><span class="line">export default bus</span><br></pre></td></tr></table></figure><p>③ 订阅方  （接收数据的组件） 订阅消息  bus.on()</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;  </span><br><span class="line">    bus.<span class="title function_">on</span>(<span class="string">&#x27;sendborther&#x27;</span>, <span class="function">(<span class="params">val</span>) =&gt;</span> &#123;   </span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(val);   </span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(val.<span class="property">value</span>); </span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>④ 发布方  （传递数据的组件） 发布消息  bus.emit()</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">sendbor</span>(<span class="params"></span>) &#123;   </span><br><span class="line">    bus.<span class="title function_">emit</span>(<span class="string">&#x27;sendborther&#x27;</span>,borvalue)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>案例：</strong></p><p>App.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt; </span><br><span class="line">&lt;img alt=&quot;Vue logo&quot; src=&quot;./assets/logo.png&quot;&gt; </span><br><span class="line">&lt;HelloWorld :islogin=&quot;islogin&quot; @sendmsg=&quot;getmsg&quot; :list=&quot;list&quot;/&gt; </span><br><span class="line">&lt;sonView @sendson=&quot;getson&quot;&gt;&lt;/sonView&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup&gt; </span><br><span class="line">    import HelloWorld from &#x27;./components/HelloWorld.vue&#x27;</span><br><span class="line">    import sonView from &#x27;./components/sonView.vue&#x27;; </span><br><span class="line">    import &#123; ref &#125; from &#x27;vue&#x27;; </span><br><span class="line">    let islogin = ref(true) </span><br><span class="line">    let list = ref([1, 2, 2, 1, 5, 3, 1, 23, 3, 1, 1, 6])</span><br><span class="line">    function getson(val) &#123;  </span><br><span class="line">        console.log(val);</span><br><span class="line">    &#125;</span><br><span class="line">    function getmsg(val) &#123;  </span><br><span class="line">        console.log(val);</span><br><span class="line">    &#125; </span><br><span class="line">&lt;/script&gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>HelloWorld.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;  </span><br><span class="line">&lt;div class=&quot;hello&quot;&gt;   </span><br><span class="line">    &lt;h1&gt;&#123;&#123; islogin ? &quot;已登录&quot; : &quot;未登录&quot; &#125;&#125;&lt;/h1&gt;   </span><br><span class="line">    &lt;button @click=&quot;sendm&quot;&gt;发送给子组件的话&lt;/button&gt;  </span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;ul&gt;    </span><br><span class="line">    &lt;li v-for=&quot;(item,index) in props.list&quot; :key=&quot;index&quot;&gt;   &#123;&#123; item &#125;&#125;&lt;/li&gt; </span><br><span class="line">&lt;/ul&gt; </span><br><span class="line">&lt;h1&gt;&#123;&#123; msg &#125;&#125;&lt;/h1&gt; </span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">    import bus from &#x27;@/utils/bus&#x27;; </span><br><span class="line">    import &#123; onMounted, ref &#125; from &#x27;vue&#x27;; </span><br><span class="line">    import &#123; defineProps,defineEmits &#125; from &#x27;vue&#x27;;</span><br><span class="line">    let msg=ref(&#x27;大家好我是第一个子组件&#x27;) </span><br><span class="line">    const props = defineProps(&#123; </span><br><span class="line">        islogin: Boolean, </span><br><span class="line">        list: Array </span><br><span class="line">    &#125;)  </span><br><span class="line">    const emit = defineEmits([&#x27;sendmsg&#x27;]) </span><br><span class="line">    function sendm() &#123; </span><br><span class="line">        emit(&#x27;sendmsg&#x27;,msg.value)</span><br><span class="line">    &#125; </span><br><span class="line">    onMounted(() =&gt; &#123;  </span><br><span class="line">        bus.on(&#x27;sendborther&#x27;, (val) =&gt; &#123;   </span><br><span class="line">            console.log(val);   </span><br><span class="line">            console.log(val.value); </span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;) </span><br><span class="line">&lt;/script&gt; </span><br><span class="line">&lt;style scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>sonView.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;h1&gt;我是子组件&lt;/h1&gt;</span><br><span class="line">        &#123;&#123; sonvalue &#125;&#125;</span><br><span class="line">        &lt;button @click=&quot;sendid&quot;&gt;子元素传递给父元素的值&lt;/button&gt;</span><br><span class="line">        &lt;button @click=&quot;sendbor&quot;&gt;子元素传给兄弟的值&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; defineEmits &#125; from &#x27;vue&#x27;;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;;</span><br><span class="line">import bus from &quot;@/utils/bus.js&quot;</span><br><span class="line">let sonvalue = ref(&#x27;0000&#x27;)</span><br><span class="line">let borvalue = ref(&#x27;borther&#x27;)</span><br><span class="line"></span><br><span class="line">const emit = defineEmits([&#x27;sendson&#x27;])</span><br><span class="line"></span><br><span class="line">function sendid() &#123;</span><br><span class="line">    emit(&#x27;sendson&#x27;, sonvalue.value)</span><br><span class="line">&#125;</span><br><span class="line">function sendbor() &#123;</span><br><span class="line">    bus.emit(&#x27;sendborther&#x27;, borvalue)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      
      
      <comments>http://example.com/2023/09/20/vue2%E5%92%8Cvue3%E7%9A%84%E5%8C%BA%E5%88%AB/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hello World</title>
      <link>http://example.com/2023/09/04/hello-world/</link>
      <guid>http://example.com/2023/09/04/hello-world/</guid>
      <pubDate>Mon, 04 Sep 2023 10:59:22 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</description>
        
      
      
      
      <content:encoded><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content:encoded>
      
      
      
      
      <comments>http://example.com/2023/09/04/hello-world/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
